Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

Example 1:

Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10

Example 2:

Input: n = 5
Output: [0,1,1,2,1,2]
Explanation:
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101

// Solution

func countBits(_ n: Int) -> [Int] {
    guard n > 0 else { return [0] }
    var binarySystem = [String]()
    var result = [0]
    
    for digit in 1...n {
        binarySystem.append(String(i, radix: 2))
    }
    for binaryDigit in binarySystem {
        if i1.contains("1") {
            result.append(i1.filter { $0 == "1" }.count)
        }
    }
    return result
}
